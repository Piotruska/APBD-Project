// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RevenueRecodnition.DataBase.Context;

#nullable disable

namespace RevenueRecodnition.Migrations
{
    [DbContext(typeof(RRConext))]
    [Migration("20240620095711_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdClient");

                    b.ToTable("Client", "APBDProject");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.CompanyClient", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<string>("ComapnyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("KRS")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdClient");

                    b.ToTable("CompanyClient", "APBDProject");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Contract", b =>
                {
                    b.Property<int>("IdContract")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContract"));

                    b.Property<DateTime>("EndDateContract")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDatePayement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDateSupport")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("StartDateContract")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDatePayement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDateSupport")
                        .HasColumnType("datetime2");

                    b.HasKey("IdContract");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdProduct");

                    b.ToTable("Contract", "APBDProject");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Discount", b =>
                {
                    b.Property<int>("IdDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiscount"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdDiscount");

                    b.ToTable("Discount", "APBDProject");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.IndividualClient", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdClient");

                    b.ToTable("IndividualClient", "APBDProject");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Payment", b =>
                {
                    b.Property<int>("IdPayement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPayement"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("DatePayed")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdContract")
                        .HasColumnType("int");

                    b.Property<int?>("IdSubscription")
                        .HasColumnType("int");

                    b.HasKey("IdPayement");

                    b.HasIndex("IdContract");

                    b.HasIndex("IdSubscription");

                    b.ToTable("Payment", "APBDProject");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<decimal>("BasePrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CurrentVersion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdProduct");

                    b.ToTable("Product", "APBDProject");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Subscription", b =>
                {
                    b.Property<int>("IdSubscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubscription"));

                    b.Property<bool>("Canceled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDateRenewalPayement")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("RenewalPeriod")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateRenewalPayement")
                        .HasColumnType("datetime2");

                    b.HasKey("IdSubscription");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdProduct");

                    b.ToTable("Subscription", "APBDProject");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdUser");

                    b.ToTable("User", "APBDProject");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.CompanyClient", b =>
                {
                    b.HasOne("RevenueRecodnition.DataBase.Entities.Client", "Client")
                        .WithOne("CompanyClient")
                        .HasForeignKey("RevenueRecodnition.DataBase.Entities.CompanyClient", "IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Contract", b =>
                {
                    b.HasOne("RevenueRecodnition.DataBase.Entities.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecodnition.DataBase.Entities.Product", "Product")
                        .WithMany("Contracts")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.IndividualClient", b =>
                {
                    b.HasOne("RevenueRecodnition.DataBase.Entities.Client", "Client")
                        .WithOne("IndividualClient")
                        .HasForeignKey("RevenueRecodnition.DataBase.Entities.IndividualClient", "IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Payment", b =>
                {
                    b.HasOne("RevenueRecodnition.DataBase.Entities.Contract", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("IdContract")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RevenueRecodnition.DataBase.Entities.Subscription", "Subscription")
                        .WithMany("Payments")
                        .HasForeignKey("IdSubscription")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Contract");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Subscription", b =>
                {
                    b.HasOne("RevenueRecodnition.DataBase.Entities.Client", "Client")
                        .WithMany("Subscriptions")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecodnition.DataBase.Entities.Product", "Product")
                        .WithMany("Subscriptions")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Client", b =>
                {
                    b.Navigation("CompanyClient");

                    b.Navigation("Contracts");

                    b.Navigation("IndividualClient");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Contract", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Product", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("RevenueRecodnition.DataBase.Entities.Subscription", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
